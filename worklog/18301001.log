2020.6.29
9:00-12:00
主要工作：
	1. 工作任务分配
	2. git的学习：常用命令
		git add file.txt
		git commit -m "message"
		git pull origin master
		git push origin master
	3. 学习了git bash如何使用，在组长搭建好github远程仓库之后尝试commit
	4. 远程仓库github与本地git仓库建立连接失败
	5. github崩溃
	6. commit测试成功

14:00-18：00
主要工作：
	1. 学习git分支管理
	2. 分支创建成功，并且观看廖雪峰教程之后初步了解branch在团队项目中的优势与原理机制

2020.6.30
9:00-12:00
主要工作：
	1. windows配置python、java、spark
	2. linux配置python、java、spark
	3. 研究时间序列模型，尝试使用模型将清洗过的数据来创建图表：
		AR: 自回归模型——历史与当前的关系
		MA：平均移动模型——历史噪声与当前的关系
		ARMA：自回归平均移动模型——前二者的结合
		ARIMA：ARMA+差分法，对数据进行差分，使数据平稳
当前任务：学习pandas，将清洗过的数据画出图表

14:00-17:00
任务11-12：ARIMA建模
主要工作：
	1. 观看ARIMA时间序列模型教学视频
	2. 查看网上资料，参考代码
主要问题：
	1. pandas的画图不熟悉，ARIMA算法模型编写遇到阻碍
已解决问题：
	1. pandas的DataFrame中数据将日期转化为字符串
	2. pandas的DataFrame将日期作为index
	3. 以DataFrame为基础作出差分数据图
未解决问题：
	1. ARIMA模型参数的确定：p、q阶参数需要通过自相关系数ACF与偏自相关系数PACF确定
	2. 疑问：
		如何将数据分段才合理？
		训练集与测试集应如何划分？


2020.7.1
9:00-12:00
任务11-12：ARIMA建模
主要学习内容：
	1. 研究模型中函数predict与forecast的区别
	2. matplotlib库的使用
		1. 参数ax的特性——制表方式的不同：
			fig = plt.figure(figsize=(12, 8))
			ax1 = fig.add_subplot(211)  # 2行，1列，起始位置1
主要问题：
	1. ARIMA建模时是以每年同一天的气温为batch？还是单纯以日期顺序为batch？
	2. 模型性能如何评判？什么值能够判断模型预测效果的好坏？

14:00-16:00
任务11-12：ARIMA建模
主要内容：
	1. 原本的思路：
		1. 首先利用差分法处理数据并且确定其平稳性
		2. 然后利用数据画出ACF与PACF图像，用来确定p、q参数
		3. 利用参数代入ARIMA模型，然后拟合数据
		4. 最终利用拟合后的模型预测未来的气温数据
	2. 个人进展出现障碍：
		1. 输入数据不知道是每一年的同一天还是直接时间顺序的数据
		2. 预测的时候不知道怎么把预测的数据变成图
		3. 那几个参数改了改代码后程序崩溃
		4. ACF与PACF图中求出的p、q值较大，模型迭代时间十分长(>30min，不知道是代码有问题，亦或是是需要长时间迭代才能出结果)
	3. 分析原因：
		1. 网络参考源码过多，不同代码的风格不同，加上对pandas与matplotlib的不熟悉，使得编写自己的代码时出现问题
		2. 利用pandas来处理含时间的数据时使用工具不熟练，DataFrame与Series两个库不熟悉，不知道如何在导入的数据集中取得自己想要的数据
	4. 目前已有小组成员成功调试出代码，下一部打算将重点转移到已完成的代码中，研究并将其完善
	5. 代码目前存在完善的地方：
		1. 输入数据的获得：同3.2




